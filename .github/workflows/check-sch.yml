name: Validate KiCad Push

on:
  pull_request:
    branches:
      - "**"

jobs:
  validate-kicad-sch:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Check if actor is admin
        id: check_admin
        run: |
          ADMINS=("maxi" "alan" "dfeolii")

          IS_ADMIN=false
          for admin in "${ADMINS[@]}"; do
            if [[ "$GITHUB_ACTOR" == "$admin" ]]; then
              IS_ADMIN=true
              break
            fi
          done

          echo "is_admin=$IS_ADMIN" >> $GITHUB_OUTPUT
        shell: bash

      - name: Get changed files
        id: changed
        run: |
          git fetch --prune --unshallow || true
          git fetch --all

          # Compare PR head vs base branch to get net diff
          BASE_SHA=$(git merge-base origin/${{ github.base_ref }} $GITHUB_SHA)
          HEAD_SHA=$GITHUB_SHA

          echo "Comparando $BASE_SHA...$HEAD_SHA"

          CHANGED_FILES=$(git diff --name-only $BASE_SHA $HEAD_SHA || true)
          echo "Archivos modificados:"
          echo "$CHANGED_FILES"

          FILES_JOINED=$(echo "$CHANGED_FILES" | tr '\n' '|' | sed 's/|$//')
          echo "files=$FILES_JOINED" >> $GITHUB_OUTPUT
        shell: bash

      - name: Validate KiCad schematic changes
        if: steps.check_admin.outputs.is_admin == 'false'
        run: |
          FILES="${{ steps.changed.outputs.files }}"
          echo "files='$FILES'"

          FILE_ARRAY=()
          if [ -n "$FILES" ]; then
            IFS='|' read -ra FILE_ARRAY <<< "$FILES"
          fi

          FILE_COUNT=${#FILE_ARRAY[@]}
          echo "Cantidad de archivos modificados: $FILE_COUNT"

          if [ $FILE_COUNT -eq 0 ]; then
            echo "✅ No schematic changes detected, passing check."
            exit 0
          fi

          if [ $FILE_COUNT -ne 1 ]; then
            echo "❌ Se modificaron $FILE_COUNT archivos. Solo se permite modificar un archivo .kicad_sch."
            exit 1
          fi

          FILE="${FILE_ARRAY[0]}"
          if [[ ! "$FILE" =~ \.kicad_sch$ ]]; then
            echo "❌ El archivo modificado no tiene extensión .kicad_sch"
            exit 1
          fi

          echo "✅ Validación exitosa: se modificó un único archivo .kicad_sch"
        shell: bash
